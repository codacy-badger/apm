language: cpp
# Run on a virtual machine.
sudo: required
os: linux
dist: xenial

env: LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib"
env: THREADS=3
env: CODECOV_TOKEN=25c4c4ca-243d-4e1d-a64c-832b6f3a735b

matrix:
  include:
    - name: GCC 8
      compiler: gcc
      # Include instruments for coverage analysis.
      env: DEFAULT_FLAGS=--coverage
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test

          packages:
            - autoconf
            - autoconf-archive
            - g++-8
            - libpugixml-dev
            - libcurl4-openssl-dev
            - pandoc
            - fakeroot
            - lintian

      install:
        - sudo update-alternatives --install /usr/bin/gcc gcc "/usr/bin/gcc-8" 90
        - sudo update-alternatives --install /usr/bin/g++ g++ "/usr/bin/g++-8" 90

        - curl -o- -sL 'https://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz' | tar -xz
        - sudo make -C lcov-1.14 install

      after_success:
        # Generate coverage info.
        - lcov -c --gcov-tool gcov-8 -d 'build' -o 'build/coverage.info'
        # Include source files for analysis only from the src/ directory.
        - lcov -e 'build/coverage.info' "$(pwd)/src/*" -o 'build/coverage.info'
        # Upload the report.
        - bash <(curl -sL 'https://codecov.io/bash') -f 'build/coverage.info'

    - name: Clang 8
      compiler: clang
      env: WARNS=-Wno-unused-command-line-argument
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8

          packages:
            - autoconf
            - autoconf-archive
            - libstdc++-8-dev
            - clang-8
            - libpugixml-dev
            - libcurl4-openssl-dev
            - pandoc
            - fakeroot
            - lintian

      before_install:
        - sudo update-alternatives --install
            /usr/local/clang-7.0.0/bin/clang clang "/usr/bin/clang-8" 90
        - sudo update-alternatives --install
            /usr/local/clang-7.0.0/bin/clang++ clang++ "/usr/bin/clang++-8" 90

    - name: Clang 7
      compiler: clang
      env: WARNS=-Wno-unused-command-line-argument
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test

          packages:
            - autoconf
            - autoconf-archive
            - libstdc++-8-dev
            - libpugixml-dev
            - libcurl4-openssl-dev
            - pandoc
            - fakeroot
            - lintian

before_script:
  - mkdir lib && cd lib

  # Build tiny-process-library.
  - curl -o- -sL
      'https://gitlab.com/eidheim/tiny-process-library/-/archive/v2.0.0/tiny-process-library-v2.0.0.tar' | tar -x
  - cd tiny-process-library-v2.0.0 && cmake .
  - make -j$THREADS && sudo make install && cd ..

  # Build curlpp.
  - curl -o- -sL
      'https://github.com/jpbarrette/curlpp/archive/v0.8.1.tar.gz' | tar -xz
  - cd curlpp-0.8.1 && cmake . && make -j$THREADS && sudo make install && cd ..

  - cd "$TRAVIS_BUILD_DIR"
  # Create links to shared libraries.
  - sudo ldconfig

script:
  # -e â€” preferably use environment variables.
  # Empty the DEFAULT_FLAGS variable for clean release build.
  - autoreconf -fi && ./configure && make DEFAULT_FLAGS= -ej$THREADS libs deb
  - make -ej$THREADS clean debug test && build/test
